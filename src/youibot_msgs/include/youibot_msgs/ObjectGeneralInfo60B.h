// Generated by gencpp from file youibot_msgs/ObjectGeneralInfo60B.msg
// DO NOT EDIT!


#ifndef YOUIBOT_MSGS_MESSAGE_OBJECTGENERALINFO60B_H
#define YOUIBOT_MSGS_MESSAGE_OBJECTGENERALINFO60B_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <std_msgs/Header.h>
#include <std_msgs/String.h>

namespace youibot_msgs
{
template <class ContainerAllocator>
struct ObjectGeneralInfo60B_
{
  typedef ObjectGeneralInfo60B_<ContainerAllocator> Type;

  ObjectGeneralInfo60B_()
    : header()
    , object_id(0)
    , longitude_dist(0.0)
    , lateral_dist(0.0)
    , longitude_vel(0.0)
    , lateral_vel(0.0)
    , object_dynprop()
    , rcs(0.0)  {
    }
  ObjectGeneralInfo60B_(const ContainerAllocator& _alloc)
    : header(_alloc)
    , object_id(0)
    , longitude_dist(0.0)
    , lateral_dist(0.0)
    , longitude_vel(0.0)
    , lateral_vel(0.0)
    , object_dynprop(_alloc)
    , rcs(0.0)  {
  (void)_alloc;
    }



   typedef  ::std_msgs::Header_<ContainerAllocator>  _header_type;
  _header_type header;

   typedef int32_t _object_id_type;
  _object_id_type object_id;

   typedef float _longitude_dist_type;
  _longitude_dist_type longitude_dist;

   typedef float _lateral_dist_type;
  _lateral_dist_type lateral_dist;

   typedef float _longitude_vel_type;
  _longitude_vel_type longitude_vel;

   typedef float _lateral_vel_type;
  _lateral_vel_type lateral_vel;

   typedef  ::std_msgs::String_<ContainerAllocator>  _object_dynprop_type;
  _object_dynprop_type object_dynprop;

   typedef float _rcs_type;
  _rcs_type rcs;





  typedef boost::shared_ptr< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> const> ConstPtr;

}; // struct ObjectGeneralInfo60B_

typedef ::youibot_msgs::ObjectGeneralInfo60B_<std::allocator<void> > ObjectGeneralInfo60B;

typedef boost::shared_ptr< ::youibot_msgs::ObjectGeneralInfo60B > ObjectGeneralInfo60BPtr;
typedef boost::shared_ptr< ::youibot_msgs::ObjectGeneralInfo60B const> ObjectGeneralInfo60BConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace youibot_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': False, 'IsMessage': True, 'HasHeader': True}
// {'geometry_msgs': ['/opt/ros/kinetic/share/geometry_msgs/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/kinetic/share/actionlib_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/kinetic/share/std_msgs/cmake/../msg'], 'youibot_msgs': ['/home/youibot/youibot_ws/src/youibot_msgs/msg', '/home/youibot/youibot_ws/devel/share/youibot_msgs/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> const>
  : FalseType
  { };

template <class ContainerAllocator>
struct IsMessage< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> const>
  : TrueType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> >
{
  static const char* value()
  {
    return "b6afcf423b08bc84de72a86d45e9b961";
  }

  static const char* value(const ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xb6afcf423b08bc84ULL;
  static const uint64_t static_value2 = 0xde72a86d45e9b961ULL;
};

template<class ContainerAllocator>
struct DataType< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> >
{
  static const char* value()
  {
    return "youibot_msgs/ObjectGeneralInfo60B";
  }

  static const char* value(const ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> >
{
  static const char* value()
  {
    return "# This is a message to hold data from an BMS\n\
\n\
Header header\n\
int32 object_id 		  #Object ID (since objects are tracked, the ID is kept\n\
					  	  #throughout measurement cycles and does not have to be consecutive)\n\
float32 longitude_dist    #Longitudinal(x) coordinate\n\
float32 lateral_dist      #Lateral(y) coordinate\n\
float32 longitude_vel     #Relative velocity in longitudinal direction (x)\n\
float32 lateral_vel       #Relative velocity in lateral direction (y)\n\
std_msgs/String  object_dynprop    #Dynamic property of the object indicating if the object is\n\
					      #moving or stationary (this value can only be determined\n\
						  #correctly if the speed and yaw rate is given correctly)\n\
float32 rcs      	      #Radar cross section\n\
\n\
\n\
================================================================================\n\
MSG: std_msgs/Header\n\
# Standard metadata for higher-level stamped data types.\n\
# This is generally used to communicate timestamped data \n\
# in a particular coordinate frame.\n\
# \n\
# sequence ID: consecutively increasing ID \n\
uint32 seq\n\
#Two-integer timestamp that is expressed as:\n\
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n\
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n\
# time-handling sugar is provided by the client library\n\
time stamp\n\
#Frame this data is associated with\n\
# 0: no frame\n\
# 1: global frame\n\
string frame_id\n\
\n\
================================================================================\n\
MSG: std_msgs/String\n\
string data\n\
";
  }

  static const char* value(const ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.header);
      stream.next(m.object_id);
      stream.next(m.longitude_dist);
      stream.next(m.lateral_dist);
      stream.next(m.longitude_vel);
      stream.next(m.lateral_vel);
      stream.next(m.object_dynprop);
      stream.next(m.rcs);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER
  }; // struct ObjectGeneralInfo60B_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::youibot_msgs::ObjectGeneralInfo60B_<ContainerAllocator>& v)
  {
    s << indent << "header: ";
    s << std::endl;
    Printer< ::std_msgs::Header_<ContainerAllocator> >::stream(s, indent + "  ", v.header);
    s << indent << "object_id: ";
    Printer<int32_t>::stream(s, indent + "  ", v.object_id);
    s << indent << "longitude_dist: ";
    Printer<float>::stream(s, indent + "  ", v.longitude_dist);
    s << indent << "lateral_dist: ";
    Printer<float>::stream(s, indent + "  ", v.lateral_dist);
    s << indent << "longitude_vel: ";
    Printer<float>::stream(s, indent + "  ", v.longitude_vel);
    s << indent << "lateral_vel: ";
    Printer<float>::stream(s, indent + "  ", v.lateral_vel);
    s << indent << "object_dynprop: ";
    s << std::endl;
    Printer< ::std_msgs::String_<ContainerAllocator> >::stream(s, indent + "  ", v.object_dynprop);
    s << indent << "rcs: ";
    Printer<float>::stream(s, indent + "  ", v.rcs);
  }
};

} // namespace message_operations
} // namespace ros

#endif // YOUIBOT_MSGS_MESSAGE_OBJECTGENERALINFO60B_H
